name: Release
on:
   workflow_dispatch:
     inputs:
      tag:
        description: 'Release version (e.g. v0.1.0)'
        required: true

env:
  BUILD_PROFILE: debug
  RUST_TOOLCHAIN: nightly-2022-10-25  
  
jobs:
  build_runtime:
    runs-on: ubuntu-latest
    env:
      SUBWASM_VERSION: 0.18.0
    strategy:
      matrix:
        chain: [ "arctic" , "snow" ]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Srtool build
        id: srtool_build
        uses: chevdor/srtool-actions@v0.6.0
        with:
          chain: ${{ matrix.chain }}

      - name: Summary
        shell: bash
        run: |
          echo '${{ steps.srtool_build.outputs.json }}' | jq > ${{ matrix.chain }}-srtool-digest.json
          cat ${{ matrix.chain }}-srtool-digest.json
          echo "Compact Runtime: ${{ steps.srtool_build.outputs.wasm }}"
          echo "Compressed Runtime: ${{ steps.srtool_build.outputs.wasm_compressed }}"

      - name: Install subwasm
        shell: bash
        run: |
          wget https://github.com/chevdor/subwasm/releases/download/v${{ env.SUBWASM_VERSION }}/subwasm_linux_amd64_v${{ env.SUBWASM_VERSION }}.deb
          sudo dpkg -i subwasm_linux_amd64_v${{ env.SUBWASM_VERSION }}.deb
          subwasm --version

      - name: Show Runtime information
        shell: bash
        run: |
          subwasm info ${{ steps.srtool_build.outputs.wasm }}
          subwasm info ${{ steps.srtool_build.outputs.wasm_compressed }}
          subwasm --json info ${{ steps.srtool_build.outputs.wasm }} > ${{ matrix.chain }}-info.json
          subwasm --json info ${{ steps.srtool_build.outputs.wasm_compressed }} > ${{ matrix.chain }}-compressed-info.json

      - name: Extract the metadata
        shell: bash
        run: |
          subwasm meta ${{ steps.srtool_build.outputs.wasm }}
          subwasm --json meta ${{ steps.srtool_build.outputs.wasm }} > ${{ matrix.chain }}-metadata.json

      - name: Check the metadata diff
        shell: bash
        run: |
          subwasm get https://${{ matrix.chain }}-rpc.icenetwork.io:9933 --output ${{ matrix.chain }}-live.wasm
          subwasm diff ${{ steps.srtool_build.outputs.wasm }} ${{ matrix.chain }}-live.wasm | \
            tee ${{ matrix.chain }}-diff.txt

      - name: Archive Subwasm results
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.chain }}-runtime
          path: |
            ${{ steps.srtool_build.outputs.wasm }}
            ${{ steps.srtool_build.outputs.wasm_compressed }}
            ${{ matrix.chain }}-srtool-digest.json
            ${{ matrix.chain }}-info.json
            ${{ matrix.chain }}-compressed-info.json
            ${{ matrix.chain }}-metadata.json
            ${{ matrix.chain }}-diff.txt
  
  build_binary:
    name: Build binary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          target: wasm32-unknown-unknown
          override: true

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          default: true
          profile: minimal
          target: wasm32-unknown-unknown
          toolchain: stable

      - name: Install WASM target (for runtime building)
        shell: bash
        run: rustup target add wasm32-unknown-unknown --toolchain ${{ env.RUST_TOOLCHAIN }}

      - name: Build optimized binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked --target x86_64-unknown-linux-gnu
          
      - name: Collect binary
        run: |
          mkdir -p binary
          mv target/x86_64-unknown-linux-gnu/release/ice-node binary/

      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: ice-binary
          path: binary
 
  release:
    name: Build and publish Runtime
    runs-on: ubuntu-latest
    
    needs:
      - build_runtime
      - build_binary
    steps:
      - name: Create Tag
        uses: laputansoft/github-tag-action@v4.6
        with:
          tag: ${{ github.event.inputs.tag }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
       
      - name: Checkout the source code
        uses: actions/checkout@v3

      - name: Create dir
        shell: bash
        run: |
          mkdir -p release/tmp/arctic
          mkdir -p binary
          mkdir -p release/tmp/arctic      
          cd release/tmp/
       
      - uses: actions/download-artifact@v2
        with:
          name: ice-binary
          path: binary
          
      - uses: actions/download-artifact@v2
        with: 
          name: arctic-runtime
          path: release/tmp/arctic
          
      - uses: actions/download-artifact@v2
        with: 
          name: snow-runtime
          path: release/tmp/snow
          
      - name: Generate template data
        run: |
            chmod +x binary/ice-node 
            mkdir -p wasm
            ls -lrt
            mv release/tmp/arctic/runtime/arctic/target/srtool/release/wbuild/arctic-runtime/*.compact.compressed.wasm wasm/
            mv release/tmp/arcticruntime/arctic/target/srtool/release/wbuild/arctic-runtime/*.compact.wasm wasm/
            mv release/tmp/snow/runtime/snow/target/srtool/release/wbuild/snow-runtime/*.compact.compressed.wasm wasm/
            mv release/tmp/snow/runtime/snow/target/srtool/release/wbuild/snow-runtime/*.compact.wasm wasm/
            mv release/tmp/arctic/arctic-diff.txt wasm/
            mv release/tmp/snow/snow-diff.txt wasm/
            cd release/tmp/
            TAG=${{ github.event.inputs.tag }}
            ARCTIC_SRTOOL_DETAILS=$(cat arctic/arctic-srtool-digest.json)
            ARCTIC_SUBWASM_DETAILS=$(cat arctic/arctic-info.json)
            SNOW_SRTOOL_DETAILS=$(cat snow/snow-srtool-digest.json)
            SNOW_SUBWASM_DETAILS=$(cat snow/snow-info.json)
            echo 'Template data:'
            jq -n \
              --arg tag "$TAG" \
              --arg arctic_srtool_details "$ARCTIC_SRTOOL_DETAILS" \
              --arg arctic_subwasm_details "$ARCTIC_SUBWASM_DETAILS" \
              --arg snow_srtool_details "$SNOW_SRTOOL_DETAILS" \
              --arg snow_subwasm_details "$SNOW_SUBWASM_DETAILS" \
              '{
                tag: $tag,
                snow_srtool_details: $snow_srtool_details,
                snow_subwasm_details: $snow_subwasm_details,
                arctic_srtool_details: $arctic_srtool_details,
                artic_subwasm_details: $arctic_subwasm_details
              }' | tee template_data.json
            cd ../../
      - name: Render release page
        uses: jayamanikharyono/jinja-action@v0.1
        with:
          datafile: release/tmp/template_data.json
          path: .github/release-template.md

      - name: Publish github release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            binary/*
            wasm/*
          body_path: ".github/release-template.md"
          tag_name: ${{ github.event.inputs.tag }}
          name: "${{ github.event.inputs.tag }}"
          token: ${{ secrets.GITHUB_TOKEN }}
